'use strict';
import { CatalystApp, CatalystAppError, ZCAuth } from '@zcatalyst/auth';
import { AuthorizedHttpClient } from './http-handler';
import FormData from './utils/form-data';
export class Handler {
    constructor(app, component) {
        if (!app) {
            app = new ZCAuth().getDefaultCredentials();
        }
        if (!(app instanceof CatalystApp)) {
            throw new CatalystAppError('INVALID_PROJECT_CREDENTIALS', 'Unable to process the project credentials. Please verify that the initialization is configured correctly.');
        }
        this.app = app;
        this.component = component;
    }
    async send(options) {
        const _httpRequester = new AuthorizedHttpClient(this.app, this.component);
        return (await _httpRequester.send(options));
    }
}
export { RequestType, ResponseType } from './utils/enums';
export { CatalystAPIError } from './utils/errors';
export { FormData };

import { CatalystAppError, ICatalystAppConfig } from '@zcatalyst/utils';
import { Credential } from './credential';
export declare class ZCAuth {
    #private;
    config: Record<string, string | number | Credential | Object>;
    init(options: Record<string, string | number | Credential | Object>, { type, appName, scope }?: {
        type?: string;
        appName?: string;
        scope?: 'admin' | 'user';
    }): CatalystApp;
    getDefaultCredentials(appName?: string): CatalystApp;
    app(appName?: string): CatalystApp;
}
export declare class CatalystApp {
    credential: Credential;
    config: ICatalystAppConfig;
    constructor(options: Record<string, string | number | Credential | Object>);
    private setOauthHeader;
    private setTicketHeader;
    authenticateRequest(req: Record<string, unknown>): Promise<void>;
}
export { AccessTokenCredential, Credential, RefreshTokenCredential, TicketCredential } from './credential';
export { CatalystAppError };

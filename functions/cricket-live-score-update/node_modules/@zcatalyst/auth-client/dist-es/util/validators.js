import { isNonEmptyObject } from '@zcatalyst/utils';
export function applyQueryString(baseUrl, queryStrings) {
    const keys = Object.keys(queryStrings);
    for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        const value = encodeURIComponent(queryStrings[key]);
        baseUrl += `${i === 0 ? '?' : '&'}${key}=${value}`;
    }
    return baseUrl;
}
export function toUpperCaseKeys(objectToConvert) {
    const obj = objectToConvert;
    const keys = Object.keys(obj);
    const len = keys.length;
    const convertedObj = {};
    for (let i = 0; i < len; i++) {
        convertedObj[keys[i].toUpperCase()] = obj[keys[i]];
    }
    return convertedObj;
}
export function hasSuffInfo(target, matches, autoHandleException = true) {
    isNonEmptyObject(target);
    for (const match of matches)
        if (!(match in target)) {
            if (autoHandleException)
                return false;
        }
    return true;
}

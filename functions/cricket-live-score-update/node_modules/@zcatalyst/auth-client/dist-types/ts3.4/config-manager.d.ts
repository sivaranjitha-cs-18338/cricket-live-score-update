import { Auth_Protocol } from './util/enums';
export declare class ConfigManager {
    private SDK_INFO;
    private SERVICE_INFO;
    private USER_INFO;
    private static INSTANCE;
    private CREDENTIAL_OBJ;
    constructor();
    CatalystDomain: string;
    IsAppSail: string;
    readonly CurrentClientPageHost: string;
    readonly CurrentClientPageProtocol: string;
    readonly CurrentClientPagePort: string;
    readonly CurrentClientPageDomain: string;
    readonly RefreshToken: string;
    readonly ClientId: string;
    readonly ClientSecret: string;
    readonly RedirectUri: string;
    readonly GrantType: string;
    TokenExpiryTime: number;
    AuthToken: string;
    CsrfToken: string;
    AuthProtocol: Auth_Protocol;
    APIDomain: string;
    jwtClientId: string;
    readonly jwtTokenCookieKey: string;
    readonly jwtTokenExpiryKey: string;
    fetchJwtDetailsCallBack: string | Function;
    jwtToken: string;
    jwtTokenExpiry: number;
    jwtAuthToken: string;
    readonly jwtAuthTokenPrefix: string;
    readonly jwtResponseType: string;
    getRetryCount(status_code: number): number | null;
    readonly TokenPrefix: string;
    IAMDomainUrl: string;
    StratusDomain: string;
    readonly SDKVersion: string;
    readonly PollInterval: number;
    readonly PollThreshold: number;
    ZAID: string;
    ProjectID: string;
    Initialized: boolean;
    CredentialJson: Object;
    OrgId: string | number;
    ProjectDomain: string;
    Environment: string;
    static getInstance(): ConfigManager;
}

"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _NoSQL_requester;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoSQLEnum = exports.NoSQLUnMarshall = exports.NoSQLMarshall = exports.NoSQLByteSet = exports.NoSQLNumberSet = exports.NoSQLStringSet = exports.NoSQLByte = exports.NoSQLItem = void 0;
const constants_1 = __importDefault(require("../utils/constants"));
const validator_1 = require("../utils/validator");
const error_1 = require("../utils/error");
const api_request_1 = require("../utils/api-request");
const table_1 = __importDefault(require("./table"));
const item_1 = require("./item");
Object.defineProperty(exports, "NoSQLItem", { enumerable: true, get: function () { return item_1.NoSQLItem; } });
const byte_1 = require("./byte");
Object.defineProperty(exports, "NoSQLByte", { enumerable: true, get: function () { return byte_1.NoSQLByte; } });
const set_1 = require("./set");
Object.defineProperty(exports, "NoSQLByteSet", { enumerable: true, get: function () { return set_1.NoSQLByteSet; } });
Object.defineProperty(exports, "NoSQLNumberSet", { enumerable: true, get: function () { return set_1.NoSQLNumberSet; } });
Object.defineProperty(exports, "NoSQLStringSet", { enumerable: true, get: function () { return set_1.NoSQLStringSet; } });
const NoSQLEnum = __importStar(require("./enum"));
exports.NoSQLEnum = NoSQLEnum;
const marshall_1 = require("./marshall");
Object.defineProperty(exports, "NoSQLMarshall", { enumerable: true, get: function () { return marshall_1.NoSQLMarshall; } });
const unmarshall_1 = require("./unmarshall");
Object.defineProperty(exports, "NoSQLUnMarshall", { enumerable: true, get: function () { return unmarshall_1.NoSQLUnMarshall; } });
const { COMPONENT, CREDENTIAL_USER, REQ_METHOD } = constants_1.default;
class NoSQL {
    constructor(app) {
        _NoSQL_requester.set(this, void 0);
        (0, validator_1.isValidApp)(app, true);
        __classPrivateFieldSet(this, _NoSQL_requester, new api_request_1.AuthorizedHttpClient(app, this), "f");
    }
    getComponentName() {
        return COMPONENT.no_sql;
    }
    /**
     * Get a NoSQL table with table Name or table Id
     * @param tableId Id or Name of the NoSQL Table
     * @returns NoSQL Table object
     */
    getTable(tableId) {
        return __awaiter(this, void 0, void 0, function* () {
            yield (0, validator_1.wrapValidatorsWithPromise)(() => {
                (0, validator_1.isNonEmptyString)(tableId, 'table_id', true);
            }, error_1.CatalystNoSQLError);
            const request = {
                method: REQ_METHOD.get,
                path: `/nosqltable/${tableId}`,
                catalyst: true,
                track: true,
                user: CREDENTIAL_USER.admin
            };
            const res = yield __classPrivateFieldGet(this, _NoSQL_requester, "f").send(request);
            const tableData = res.data.data;
            return new table_1.default(__classPrivateFieldGet(this, _NoSQL_requester, "f"), { tableDetails: tableData });
        });
    }
    /**
     * Get all NoSQL table present in the project
     * @returns All NoSQL tables
     */
    getAllTable() {
        return __awaiter(this, void 0, void 0, function* () {
            const request = {
                method: REQ_METHOD.get,
                path: `/nosqltable`,
                catalyst: true,
                track: true,
                user: CREDENTIAL_USER.admin
            };
            const res = yield __classPrivateFieldGet(this, _NoSQL_requester, "f").send(request);
            const allTablesData = res.data.data;
            return allTablesData.map((tableData) => new table_1.default(__classPrivateFieldGet(this, _NoSQL_requester, "f"), { tableDetails: tableData }));
        });
    }
    table(input) {
        if (typeof input === 'string') {
            return new table_1.default(__classPrivateFieldGet(this, _NoSQL_requester, "f"), { tableId: input });
        }
        return new table_1.default(__classPrivateFieldGet(this, _NoSQL_requester, "f"), { tableDetails: input });
    }
}
exports.default = NoSQL;
_NoSQL_requester = new WeakMap();

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoSQLSecondaryKeyCondition = exports.NoSQLUpdateOperationType = exports.NoSQLCrudOperation = exports.NoSQLConditionGroupOperator = exports.NoSQLOperator = exports.NoSQLReturnValue = exports.AttribType = exports.DataType = void 0;
/** No SQL Data types */
var DataType;
(function (DataType) {
    /** String */
    DataType["S"] = "S";
    /** Number */
    DataType["N"] = "N";
    /** Boolean */
    DataType["BOOL"] = "BOOL";
    /** Byte */
    DataType["B"] = "B";
    /** List */
    DataType["L"] = "L";
    /** Map */
    DataType["M"] = "M";
    /** String Set */
    DataType["SS"] = "SS";
    /** Number Set */
    DataType["SN"] = "SN";
    /** Byte Set */
    DataType["SB"] = "SB";
    /** NULL value */
    DataType["NULL"] = "NULL";
})(DataType = exports.DataType || (exports.DataType = {}));
var AttribType;
(function (AttribType) {
    AttribType["KEYS_ONLY"] = "keys_only";
    AttribType["ALL"] = "all";
    AttribType["INCLUDE"] = "include";
})(AttribType = exports.AttribType || (exports.AttribType = {}));
var NoSQLReturnValue;
(function (NoSQLReturnValue) {
    NoSQLReturnValue["NEW"] = "NEW";
    NoSQLReturnValue["OLD"] = "OLD";
    NoSQLReturnValue["NULL"] = "NULL";
})(NoSQLReturnValue = exports.NoSQLReturnValue || (exports.NoSQLReturnValue = {}));
var NoSQLOperator;
(function (NoSQLOperator) {
    NoSQLOperator["CONTAINS"] = "contains";
    NoSQLOperator["NOT_CONTAINS"] = "not_contains";
    NoSQLOperator["BEGINS_WITH"] = "begins_with";
    NoSQLOperator["ENDS_WITH"] = "ends_with";
    NoSQLOperator["IN"] = "in";
    NoSQLOperator["NOT_IN"] = "not_in";
    NoSQLOperator["BETWEEN"] = "between";
    NoSQLOperator["NOT_BETWEEN"] = "not_between";
    NoSQLOperator["EQUALS"] = "equals";
    NoSQLOperator["NOT_EQUALS"] = "not_equals";
    NoSQLOperator["GREATER_THAN"] = "greater_than";
    NoSQLOperator["LESS_THAN"] = "less_than";
    NoSQLOperator["GREATER_EQUAL"] = "greater_equal";
    NoSQLOperator["LESS_EQUAL"] = "less_equal";
})(NoSQLOperator = exports.NoSQLOperator || (exports.NoSQLOperator = {}));
var NoSQLConditionGroupOperator;
(function (NoSQLConditionGroupOperator) {
    NoSQLConditionGroupOperator["AND"] = "AND";
    NoSQLConditionGroupOperator["OR"] = "OR";
})(NoSQLConditionGroupOperator = exports.NoSQLConditionGroupOperator || (exports.NoSQLConditionGroupOperator = {}));
var NoSQLCrudOperation;
(function (NoSQLCrudOperation) {
    NoSQLCrudOperation["CREATE"] = "create";
    NoSQLCrudOperation["READ"] = "read";
    NoSQLCrudOperation["UPDATE"] = "update";
    NoSQLCrudOperation["DELETE"] = "delete";
})(NoSQLCrudOperation = exports.NoSQLCrudOperation || (exports.NoSQLCrudOperation = {}));
var NoSQLUpdateOperationType;
(function (NoSQLUpdateOperationType) {
    NoSQLUpdateOperationType["PUT"] = "PUT";
    NoSQLUpdateOperationType["DELETE"] = "DELETE";
})(NoSQLUpdateOperationType = exports.NoSQLUpdateOperationType || (exports.NoSQLUpdateOperationType = {}));
var NoSQLSecondaryKeyCondition;
(function (NoSQLSecondaryKeyCondition) {
    NoSQLSecondaryKeyCondition["BEGINS_WITH"] = "begins_with";
    NoSQLSecondaryKeyCondition["BETWEEN"] = "between";
    NoSQLSecondaryKeyCondition["EQUALS"] = "equals";
    NoSQLSecondaryKeyCondition["GREATER_THAN"] = "greater_than";
    NoSQLSecondaryKeyCondition["LESS_THAN"] = "less_than";
    NoSQLSecondaryKeyCondition["GREATER_EQUAL"] = "greater_equal";
    NoSQLSecondaryKeyCondition["LESS_EQUAL"] = "less_equal";
})(NoSQLSecondaryKeyCondition = exports.NoSQLSecondaryKeyCondition || (exports.NoSQLSecondaryKeyCondition = {}));

import { NoSQLCrudOperation } from './enum';
import { NoSQLItem } from './item';
import { INoSQLData, INoSQLResponse } from './types';
export declare class NoSQLData {
    /**
     * Status of the NoSQL operation
     */
    status: string;
    /**
     * The new item that's produced as a result of create or update process
     */
    item?: NoSQLItem;
    /**
     * The old item before getting modified during the update process
     */
    old_item?: NoSQLItem;
    constructor(data: INoSQLData);
}
/**
 * Class that represents the response returned from performing a NoSQL operation
 */
export default class NoSQLResponse {
    /**
     * Size of the attribute data returned
     *
     * `size = byteLength(attribute_key) + byteLength(attribute_value)`
     */
    size: number;
    /**
     * Data returned from a read operation
     */
    get?: Array<NoSQLData>;
    /**
     * Data returned from an update operation
     */
    update?: Array<NoSQLData>;
    /**
     * Data returned from a delete operation
     */
    delete?: Array<NoSQLData>;
    /**
     * Data returned from a create operation
     */
    create?: Array<NoSQLData>;
    /**
     * Pagination key
     */
    start_key?: NoSQLItem;
    /**
     * NoSQL Operation performed
     */
    operation: NoSQLCrudOperation;
    constructor(resp: INoSQLResponse);
    /**
     * Get the response data based on the current operation
     * @returns NoSQLData
     */
    getResponseData(): Array<NoSQLData>;
    toString(): string;
}

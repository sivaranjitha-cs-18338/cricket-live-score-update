"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _NoSQLByte_bytes;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoSQLByte = void 0;
const error_1 = require("../utils/error");
/**
 * Byte(B) implementation of a NoSQL
 */
class NoSQLByte {
    constructor(bytes) {
        _NoSQLByte_bytes.set(this, void 0);
        __classPrivateFieldSet(this, _NoSQLByte_bytes, bytes, "f");
    }
    /**
     * Check if an object is a NoSQL compatible buffer
     * @param data object to check
     * @returns true if the object is a compatible buffer
     */
    static isBuffer(data) {
        const binaryTypes = [
            // 'ArrayBuffer',
            // 'Blob',
            'Buffer',
            // 'DataView',
            // 'File',
            'Int8Array',
            'Uint8Array',
            'Uint8ClampedArray',
            'Int16Array',
            'Uint16Array',
            'Int32Array',
            'Uint32Array',
            'Float32Array',
            'Float64Array',
            'BigInt64Array',
            'BigUint64Array'
        ];
        if (typeof data === 'object' && (data === null || data === void 0 ? void 0 : data.constructor)) {
            return binaryTypes.includes(data.constructor.name);
        }
        return false;
    }
    /**
     * Get a raw representation of the byte value
     * @returns byte value
     */
    raw() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f");
    }
    /**
     * Converts the NoSQLByte to native Buffer
     * @returns Buffer representation of the NoSQLByte
     */
    toBuffer() {
        if (typeof __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") === 'string') {
            return Buffer.from(__classPrivateFieldGet(this, _NoSQLByte_bytes, "f"), 'base64');
        }
        else if (__classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Buffer) {
            return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f");
        }
        else {
            switch (true) {
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int8Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint8Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint8ClampedArray:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int16Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint16Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int32Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint32Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Float32Array:
                case __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Float64Array:
                    return Buffer.from(__classPrivateFieldGet(this, _NoSQLByte_bytes, "f").buffer);
            }
        }
        throw new error_1.CatalystNoSQLError('invalid_byte_data', 'Unknown byte data value. Please refer the docs for supported byte data types');
    }
    /**
     * Converts the NoSQLByte to Int8Array
     * @returns Int8Array representation of the NoSQLByte
     */
    toInt8Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int8Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Int8Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Uint8Array
     * @returns Uint8Array representation of the NoSQLByte
     */
    toUint8Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint8Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Uint8Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Uint8ClampedArray
     * @returns Uint8ClampedArray representation of the NoSQLByte
     */
    toUint8ClampedArray() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint8ClampedArray
            ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f")
            : Uint8ClampedArray.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Int16Array
     * @returns Int16Array representation of the NoSQLByte
     */
    toInt16Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int16Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Int16Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Uint16Array
     * @returns Uint16Array representation of the NoSQLByte
     */
    toUint16Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint16Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Uint16Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Int32Array
     * @returns Int32Array representation of the NoSQLByte
     */
    toInt32Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Int32Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Int32Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Uint32Array
     * @returns Uint32Array representation of the NoSQLByte
     */
    toUint32Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Uint32Array ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : Uint32Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Float32Array
     * @returns Float32Array representation of the NoSQLByte
     */
    toFloat32Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Float32Array
            ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f")
            : Float32Array.from(this.toBuffer());
    }
    /**
     * Converts the NoSQLByte to Float64Array
     * @returns Float64Array representation of the NoSQLByte
     */
    toFloat64Array() {
        return __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") instanceof Float64Array
            ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f")
            : Float64Array.from(this.toBuffer());
    }
    // BigInt64Array(): BigInt64Array {
    // 	return this.#bytes instanceof BigInt64Array
    // 		? this.#bytes
    // 		: BigInt64Array.from(this.toBuffer());
    // }
    // BigUint64Array(): BigUint64Array {
    // 	return this.#bytes instanceof BigUint64Array
    // 		? this.#bytes
    // 		: BigUint64Array.from(this.toBuffer());
    // }
    /**
     * Serializable representation of the NoSQLByte
     * @returns base64 encoded string of the NoSQLByte
     */
    toJSON() {
        return typeof __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") === 'string' ? __classPrivateFieldGet(this, _NoSQLByte_bytes, "f") : this.toBuffer().toString('base64');
    }
    /**
     * Base64 encoded string representation of the NoSQLByte
     * @returns base64 encoded string of the NoSQLByte
     */
    toString() {
        return this.toJSON();
    }
}
exports.NoSQLByte = NoSQLByte;
_NoSQLByte_bytes = new WeakMap();

/// <reference types="node" />
import { CatalystApp } from '../catalyst-app';
import { AuthorizedHttpClient } from '../utils/api-request';
import { Readable } from 'stream';
import { ICatalystSmartbrowzPdf, ICatalystSmartbrowzScrShot, ICatalystSmartbrowzTemplate } from '../utils/pojo/smartbrowz';
import { Dataverse } from './dataverse';
type ICatalystSmartbrowzTemplateOptions = ICatalystSmartbrowzTemplate & (ICatalystSmartbrowzScrShot | ICatalystSmartbrowzPdf);
export declare class Smartbrowz {
    #private;
    readonly requester: AuthorizedHttpClient;
    readonly projectId: string | number;
    constructor(app: CatalystApp);
    convertToPdf(source: string, options?: ICatalystSmartbrowzPdf): Promise<Readable>;
    takeScreenshot(source: string, options?: ICatalystSmartbrowzScrShot): Promise<Readable>;
    generateFromTemplate(id: string, options?: ICatalystSmartbrowzTemplateOptions): Promise<Readable>;
    /**
     * Get comprehensive details about any organization using its name, email address or website URL.
     * @param leadDetails - detail to identify the lead. Supported values Email, LeadName, WebsiteURL.
     * @returns enriched leads data
     */
    getEnrichedLead({ email, leadName, websiteUrl }?: Parameters<Dataverse['getEnrichedLead']>[0]): ReturnType<Dataverse['getEnrichedLead']>;
    /**
     * Get details about the technologies and frameworks used by an organization.
     * @param websiteUrl - Url of the website to find the tech stack.
     * @returns tech stack details of the website
     */
    findTechStack(websiteUrl: Parameters<Dataverse['findTechStack']>[0]): ReturnType<Dataverse['findTechStack']>;
    /**
     * Find out all the potential competitors of an organization.
     * @param orgDetails - details to identify the organization. Supported values are LeadName and WebsiteURL
     * @returns list of similar organizations.
     */
    getSimilarCompanies({ leadName, websiteUrl }?: Parameters<Dataverse['getSimilarCompanies']>[0]): ReturnType<Dataverse['getSimilarCompanies']>;
}
export {};
